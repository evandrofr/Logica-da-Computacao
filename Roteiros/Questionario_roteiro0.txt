Questionário
 1. Explique como foi feito para reconhecer múltiplos dígitos e realizar múltiplas operações.
	O programa funciona de maneira muito simples. Ele percorre a “string” recebida caractere por caractere e o identifica como número(“digit”) ou símbolo salvando-os em uma lista de operações. Depois disso essa lista é inspecionada para verificar se não há nenhuma inconsistência nas operações. O programa procura por símbolos em locais inapropriados, como no início ou final da operação, e número ou símbolos sequenciais. Por fim, tento em vista que a lista operações já está no formato desejado, procura-se os símbolos nas posições ímpares da lista e as operações de soma e subtração são feitas na ordem em que apareceram.
Números com múltiplos algarismos são reconhecidos por meio de um loop que se perpetua até que seja encontrado um caractere não numérico. Todos os caracteres numéricos são colocados em uma lista temporária na ordem em que aparecem, quando o loop se encerra, esses algarismos são multiplicados por 10 elevado ao número que corresponde a sua posição, somados para a formação do número desejado e a lista reiniciada. 

 2. Pense na estrutura de alguma linguagem procedural (C por exemplo), indique com detalhes como você expandiria o seu programa para compilar um programa nessa linguagem.
A estrutura em 3 etapas proposta para solucionar o problema da calculadora simples pode ser expandida para uma identificar e processar mais que símbolos e números, visto que ela em muito se parece com os Analisadores Léxicos e Sintático de um compilador. Pode-se utilizar a mesma ideia de identificação de dígitos e símbolos para se identificar palavras chaves de uma linguagem de programação transformando-o em um Analisador Léxico. Já o loop que procura por inconsistências pode ser aprimorado para procurar por erros mais típicos de uma linguagem de programação como a utilização de cadeias de palavras chaves que não fazem sentido transformando-o em um Analisador Sintático.
Seria necessário ainda o desenvolvimento de uma etapa para procurar por erros semânticos visto que ela não foi necessária na resolução desse problema mais simples.
